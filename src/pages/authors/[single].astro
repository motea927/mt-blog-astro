---
import { Image } from "@astrojs/image/components";

import AuthorSingle from "@layouts/AuthorSingle.astro";
import Base from "@layouts/Base.astro";
import { getSinglePage } from "@lib/contentParser.astro";
import dateFormat from "@lib/utils/dateFormat";

import { sortByDate } from "@lib/utils/sortFunctions";
import { humanize,slugify } from "@lib/utils/textConverter";
import { BiCalendarEdit,BiCategoryAlt } from "react-icons/bi/index.js";

export async function getStaticPaths() {
  const authors = await getSinglePage("authors");

  const paths = authors.map((author) => ({
    params: {
      single: author.slug,
    },
    props: { author },
  }));
  return paths;
}

const { author } = Astro.props;
const { title, meta_title, description, image } = author.data;

// Author Posts
const posts = await getSinglePage("posts");
const sortPostsByDate = sortByDate(posts);
const currentPosts = sortPostsByDate.filter((post) => {
  return post.data.authors.map((author: string) => slugify(author)).includes(slugify(title))
});
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <AuthorSingle author={author} />

  {currentPosts.length > 0 && (
    <section class="pt-0 section">
      <div class="container">
        <h2 class="mb-8 text-center h3">Recent Posts</h2>
        <div class={`row gy-4 ${currentPosts.length < 3 ? "justify-center" : ""}`}>
          {currentPosts.map((post: any, i: number) => (
          <div class="col-12 sm:col-6 lg:col-4">
            {post.data.image && (
              <a href={`/${post.slug}`} class="block overflow-hidden rounded-lg hover:text-primary group">
                <Image
                  class="group-hover:scale-[1.05] transition duration-300 w-full"
                  src={post.data.image}
                  alt={post.data.title}
                  width={445}
                  height={230}
                  format={'webp'}
                />
              </a>
            )}
            <ul class="flex flex-wrap items-center mt-4 text-sm text-text">
              <li class="flex flex-wrap items-center mb-2 mr-4 font-medium">
                <BiCalendarEdit className="mr-1 h-[16px] w-[16px] text-gray-600" />
                <>{dateFormat(post.data.date)}</>
              </li>
              <li class="flex flex-wrap items-center mb-2 mr-4">
                <BiCategoryAlt className="mr-1 h-[16px] w-[16px] text-gray-600" />
                <>
                  <ul>
                    {post.data.categories.map((category: string, i: number) => (
                      <li class="inline-block">
                        <a
                          href={`/categories/${slugify(category)}`}
                          class="mr-2 font-medium hover:text-primary"
                        >
                          {humanize(category)}{i !== post.data.categories.length - 1 && ","}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              </li>
            </ul>
            <h3 class="h5">
              <a href={`/${post.slug}`} class="block transition duration-300 hover:text-primary">
                {post.data.title}
              </a>
            </h3>
          </div>
          ))}
        </div>
      </div>
    </section>
  )}
</Base>
